// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Budget {
  id               Int               @id @default(autoincrement())
  value            Decimal           @db.Money
  currentValue     Decimal           @db.Money
  name             String            @db.VarChar(255)
  isDeleted         Boolean          @default(false)
  user             User              @relation(fields: [userId], references: [id])
  userId           Int
  expense          Expense?
  recurringExpense RecurringExpense?
}

model IncomeCategory {
  id     Int    @id @default(autoincrement())
  name   String @unique @db.VarChar(255)
  icon   String @db.VarChar(100)
  isDeleted         Boolean           @default(false)
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model OutcomeCategory {
  id               Int               @id @default(autoincrement())
  name             String            @unique @db.VarChar(255)
  icon             String            @db.VarChar(100)
  isDeleted         Boolean          @default(false)
  user             User              @relation(fields: [userId], references: [id])
  userId           Int
  expense          Expense?
  recurringExpense RecurringExpense?
}

model Category {
  id                Int               @id @default(autoincrement())
  name              String            @unique @db.VarChar(255)
  icon              String            @db.VarChar(100)
  isDeleted         Boolean           @default(false)
  user              User              @relation(fields: [userId], references: [id])
  userId            Int
  parentCategory    Category?         @relation(fields: [parentCategoryId], references: [id])
  parentCategoryId  Int?
  expense           Expense?
  recurringExpense  RecurringExpense?
  category          Category[]        @relation("CategoryToCategory")
}

model Currency {
  id               Int               @id @default(autoincrement())
  code             String            @unique @db.VarChar(3)
  exchangeRate     Float             @db.DoublePrecision
  isDeleted        Boolean           @default(false)
  user             User              @relation(fields: [userId], references: [id])
  userId           Int
  expense          Expense?
  recurringExpense RecurringExpense?
}

model Expense {
  id                Int             @id @default(autoincrement())
  date              DateTime        @db.Date
  note              String          @db.VarChar(255)
  amount            Decimal         @db.Money
  isDeleted         Boolean           @default(false)
  payer             Payer           @relation(fields: [payerId], references: [id])
  payerId           Int
  currency          Currency        @relation(fields: [currencyId], references: [id])
  currencyId        Int
  payFrom           Budget          @relation(fields: [budgetId], references: [id])
  budgetId          Int
  category          Category        @relation(fields: [categoryId], references: [id])
  categoryId        Int
  outcomeCategory   OutcomeCategory @relation(fields: [outcomeCategoryId], references: [id])
  outcomeCategoryId Int
}

model RecurringExpense {
  id                Int             @id @default(autoincrement())
  date              DateTime        @db.Date
  note              String          @db.VarChar(255)
  amount            Decimal         @db.Money
  dayOfPayment      DateTime        @db.Date
  activationDate    DateTime        @db.Date
  isDeleted         Boolean         @default(false)
  payer             Payer           @relation(fields: [payerId], references: [id])
  payerId           Int
  currency          Currency        @relation(fields: [currencyId], references: [id])
  currencyId        Int
  payFrom           Budget          @relation(fields: [budgetId], references: [id])
  budgetId          Int
  category          Category        @relation(fields: [categoryId], references: [id])
  categoryId        Int
  outcomeCategory   OutcomeCategory @relation(fields: [outcomeCategoryId], references: [id])
  outcomeCategoryId Int
}

model Payer {
  id               Int               @id @default(autoincrement())
  name             String            @unique @db.VarChar(255)
  isDeleted        Boolean           @default(false)
  user             User              @relation(fields: [userId], references: [id])
  userId           Int
  expense          Expense?
  recurringExpense RecurringExpense?
}

model User {
  id                Int               @id @default(autoincrement())
  email             String            @unique
  passwordHash      String
  passwordSalt      String
  firstName         String            @db.VarChar(100)
  lastName          String            @db.VarChar(100)
  isActive          Boolean           @default(true)
  budgets           Budget[]
  payers            Payer[]
  outcomeCategories OutcomeCategory[]
  incomeCategories  IncomeCategory[]
  subCategories     Category[]
  currency          Currency?
}
